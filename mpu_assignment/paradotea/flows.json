[
    {
        "id": "55c67a84f484e608",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e25a4929ca2fee2b",
        "type": "mqtt in",
        "z": "55c67a84f484e608",
        "name": "",
        "topic": "esp32/gyro",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3735e6a4ab0c9081",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 340,
        "wires": [
            [
                "a3d5f1d952ef5198",
                "1017887cc4daa29f"
            ]
        ]
    },
    {
        "id": "a3d5f1d952ef5198",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 260,
        "wires": []
    },
    {
        "id": "1017887cc4daa29f",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "function 1",
        "func": "const data = msg.payload; // e.g., \"gx:-0.01 gy:0.12 gz:-0.14\"\nconst match = data.match(/gx:([-.\\d]+)\\s+gy:([-.\\d]+)\\s+gz:([-.\\d]+)/);\n\nif (!match) {\n    node.error(\"Invalid gyro data format\", msg);\n    return [null, null, null];\n}\n\n// Create individual messages for each output\nconst gxMsg = { payload: parseFloat(match[1]) };\nconst gyMsg = { payload: parseFloat(match[2]) };\nconst gzMsg = { payload: parseFloat(match[3]) };\n\n// Return an array for the 3 outputs\nreturn [gxMsg, gyMsg, gzMsg];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "3c1733b4f030c076"
            ],
            [
                "c60d4340e6b59c02",
                "6e5aab3fac97580a"
            ],
            []
        ]
    },
    {
        "id": "c60d4340e6b59c02",
        "type": "ui_chart",
        "z": "55c67a84f484e608",
        "name": "",
        "group": "fd542c5987c6858c",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "GyroY",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 490,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3c1733b4f030c076",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "6e5aab3fac97580a",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 400,
        "wires": []
    },
    {
        "id": "af6d493f80f3d7f4",
        "type": "mqtt in",
        "z": "55c67a84f484e608",
        "name": "",
        "topic": "esp32/acc",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3735e6a4ab0c9081",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 660,
        "wires": [
            [
                "28d6f1d923c52aa8",
                "16071d46a4a94c8b"
            ]
        ]
    },
    {
        "id": "28d6f1d923c52aa8",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 660,
        "wires": []
    },
    {
        "id": "16071d46a4a94c8b",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "function 2",
        "func": "const data = msg.payload; // e.g., \"gx:-0.01 gy:0.12 gz:-0.14\"\nconst match = data.match(/ax:([-.\\d]+)\\s+ay:([-.\\d]+)\\s+az:([-.\\d]+)/);\n\nif (!match) {\n    node.error(\"Invalid accelaration data format\", msg);\n    return [null, null, null];\n}\n\n// Create individual messages for each output\nconst gxMsg = { payload: parseFloat(match[1]) };\nconst gyMsg = { payload: parseFloat(match[2]) };\nconst gzMsg = { payload: parseFloat(match[3]) };\n\n// Return an array for the 3 outputs\nreturn [gxMsg, gyMsg, gzMsg];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 720,
        "wires": [
            [
                "7ad8ab2bb28b58f1"
            ],
            [
                "75a31e20bef26f55",
                "6a93ecc225cb2c49"
            ],
            []
        ]
    },
    {
        "id": "75a31e20bef26f55",
        "type": "ui_chart",
        "z": "55c67a84f484e608",
        "name": "",
        "group": "fd542c5987c6858c",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "AccY",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 490,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "7ad8ab2bb28b58f1",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 600,
        "wires": []
    },
    {
        "id": "6a93ecc225cb2c49",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 800,
        "wires": []
    },
    {
        "id": "a5ac43b74d044f98",
        "type": "mqtt in",
        "z": "55c67a84f484e608",
        "name": "",
        "topic": "esp32/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3735e6a4ab0c9081",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "3579b8f6c079be56",
                "c23a052d0acbba9d",
                "3aaeafbfdc241f80"
            ]
        ]
    },
    {
        "id": "3579b8f6c079be56",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "27b06e188ae75b7a",
        "type": "influxdb out",
        "z": "55c67a84f484e608",
        "influxdb": "0df6cdac91a77b55",
        "name": "",
        "measurement": "led_status",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 670,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c23a052d0acbba9d",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "function 3",
        "func": "let parts = msg.payload.split(\" \");\nlet led1 = parts[0].split(\":\")[1] === \"ON\" ? 1 : 0;\nlet led2 = parts[1].split(\":\")[1] === \"ON\" ? 1 : 0;\nlet pwm = parseInt(parts[2].split(\":\")[1]);\n\nmsg.payload = {\n    LED1: led1,\n    LED2: led2,\n    PWM: pwm\n};\nmsg.measurement = \"led_status\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1280,
        "wires": [
            [
                "9b1e1085760c77be",
                "27b06e188ae75b7a"
            ]
        ]
    },
    {
        "id": "9b1e1085760c77be",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1237185a332a66a2",
        "type": "mqtt in",
        "z": "55c67a84f484e608",
        "name": "",
        "topic": "esp32/restore_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3735e6a4ab0c9081",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 1440,
        "wires": [
            [
                "caec33b9bef7e024",
                "499dab15d07997fd"
            ]
        ]
    },
    {
        "id": "caec33b9bef7e024",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "create restore query",
        "func": "msg.query = 'SELECT LAST(\"LED1\"), LAST(\"LED2\"), LAST(\"PWM\") FROM \"led_status\"';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1400,
        "wires": [
            [
                "b307d423f2468568"
            ]
        ]
    },
    {
        "id": "b307d423f2468568",
        "type": "influxdb in",
        "z": "55c67a84f484e608",
        "influxdb": "0df6cdac91a77b55",
        "name": "",
        "query": "msg.query",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 540,
        "y": 1460,
        "wires": [
            [
                "4facaf14c14eff93",
                "31fda7fb3dfc479a"
            ]
        ]
    },
    {
        "id": "4facaf14c14eff93",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "restore payload formating",
        "func": "let row = msg.payload[0]; // first row of result\n\nlet LED1 = row.last === 1 ? \"ON\" : \"OFF\";\nlet LED2 = row.last_1 === 1 ? \"ON\" : \"OFF\";\nlet PWM = row.last_2;\n\nmsg.payload = `LED1:${LED1} LED2:${LED2} PWM:${PWM}`;\nmsg.topic = \"esp32/restore_state\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "df3cf4d96ee5884e"
            ]
        ]
    },
    {
        "id": "499dab15d07997fd",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1480,
        "wires": []
    },
    {
        "id": "31fda7fb3dfc479a",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1520,
        "wires": []
    },
    {
        "id": "df3cf4d96ee5884e",
        "type": "mqtt out",
        "z": "55c67a84f484e608",
        "name": "",
        "topic": "esp32/restore_state",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3735e6a4ab0c9081",
        "x": 860,
        "y": 1460,
        "wires": []
    },
    {
        "id": "a2e070331ba4a728",
        "type": "ui_switch",
        "z": "55c67a84f484e608",
        "name": "",
        "label": "LED1switch",
        "tooltip": "",
        "group": "7f31f5d88e227e66",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "2a31fd77bb147b57",
        "type": "ui_switch",
        "z": "55c67a84f484e608",
        "name": "",
        "label": "LED2switch",
        "tooltip": "",
        "group": "7f31f5d88e227e66",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 670,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "a7bdcf0efd1c966e",
        "type": "ui_slider",
        "z": "55c67a84f484e608",
        "name": "",
        "label": "PWM slider",
        "tooltip": "",
        "group": "7f31f5d88e227e66",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "255",
        "step": 1,
        "className": "",
        "x": 670,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "3aaeafbfdc241f80",
        "type": "function",
        "z": "55c67a84f484e608",
        "name": "function 4",
        "func": "let parts = msg.payload.split(\" \");\nlet led1 = parts[0].split(\":\")[1] === \"ON\" ? 1 : 0;\nlet led2 = parts[1].split(\":\")[1] === \"ON\" ? 1 : 0;\nlet pwm = parseInt(parts[2].split(\":\")[1]);\n\n// Create separate messages\nlet msg1 = { payload: led1 };  // For LED1 switch\nlet msg2 = { payload: led2 };  // For LED2 switch\nlet msg3 = { payload: pwm };   // For PWM slider\n\n// Return them as array to go to 3 outputs\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1100,
        "wires": [
            [
                "a2e070331ba4a728",
                "72c9683618b8883a"
            ],
            [
                "2a31fd77bb147b57"
            ],
            [
                "a7bdcf0efd1c966e"
            ]
        ]
    },
    {
        "id": "72c9683618b8883a",
        "type": "debug",
        "z": "55c67a84f484e608",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3735e6a4ab0c9081",
        "type": "mqtt-broker",
        "name": "project",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fd542c5987c6858c",
        "type": "ui_group",
        "name": "kainourio",
        "tab": "647599896b55fb0b",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0df6cdac91a77b55",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "esp32db",
        "name": "influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "7f31f5d88e227e66",
        "type": "ui_group",
        "name": "Default",
        "tab": "647599896b55fb0b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "647599896b55fb0b",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]